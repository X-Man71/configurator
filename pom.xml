<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>christian.henle</groupId>
	<artifactId>order</artifactId>
	<version>SNAPSHOT-0.0.1</version>

	<name>order</name>
	<packaging>war</packaging>

	<properties>

		<!-- Generic properties -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Spring -->
		<spring-framework.version>4.1.1.RELEASE</spring-framework.version>
		<spring-data-jpa.version>1.7.0.M1</spring-data-jpa.version>
		<springsecurity.version>4.0.0.M2</springsecurity.version>
		<spring.webflow>2.4.0.RELEASE</spring.webflow>

		<!-- Query DSL -->
		<querydsl.version>3.4.3</querydsl.version>

		<!-- AOP -->
		<aspectj.version>1.8.1</aspectj.version>

		<!-- Thymeleaf -->
		<thymeleaf.version>2.1.3.RELEASE</thymeleaf.version>
		<thymeleaf-extras-springsecurity3>2.1.1.RELEASE</thymeleaf-extras-springsecurity3>

		<!-- Java EE / Java SE dependencies -->
		<jsp.version>2.2</jsp.version>
		<jstl.version>1.2</jstl.version>

		<javax.servlet-api>3.1.0</javax.servlet-api>
		<javax-el.version>2.2</javax-el.version>
		<jaxb-api.version>2.2.7</jaxb-api.version>
		<jaxb-impl.version>2.2.7-b53</jaxb-impl.version>

		<!-- Hibernate / JPA -->
		<hibernate.version>4.3.6.Final</hibernate.version>
		<hibernate-validator.version>5.1.2.Final</hibernate-validator.version>
		<hibernate-jpa.version>1.0.0.Final</hibernate-jpa.version>

		<!-- Bean validation -->
		<validation.version>1.1.0.Final</validation.version>


		<!-- Database access -->
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<ehcache.version>2.6.5</ehcache.version>
		<hsqldb.version>2.2.9</hsqldb.version>



		<!-- Logging -->
		<logback.version>1.1.2</logback.version>
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.7</slf4j.version>

		<!-- RSS -->
		<rome.version>1.0</rome.version>

		<!-- Test -->
		<junit.version>4.11</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<mockito.version>1.9.5</mockito.version>

		<!-- Dates -->
		<jodatime-hibernate.version>1.3</jodatime-hibernate.version>
		<jodatime-jsptags.version>1.1.1</jodatime-jsptags.version>
		<jodatime.version>2.2</jodatime.version>
		<jadira-usertype-core.version>3.1.0.CR1</jadira-usertype-core.version>


		<!-- Web dependencies -->
		<webjars-bootstrap.version>3.2.0</webjars-bootstrap.version>
		<webjars-jquery.version>1.11.1</webjars-jquery.version>
		<webjars-sockjs-client.version>0.3.4</webjars-sockjs-client.version>
		<webjars-stomp-websocket.version>2.3.1</webjars-stomp-websocket.version>
		<dandelion.datatables.version>0.8.7</dandelion.datatables.version>

		<mysql.version>5.1.22</mysql.version>

		<jetty.version>9.2.2.v20140723</jetty.version>

	</properties>

	<dependencies>

		<!-- SPRING, SPRING, SPRINGITY SPRING -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-framework.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>


		<!-- used for EhCacheCacheManager -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-framework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>quartz</groupId>
					<artifactId>quartz</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring-framework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>

		<!-- Spring Security -->

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${springsecurity.version}</version>

		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${springsecurity.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring Webflow -->
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>${spring.webflow}</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation.version}</version>
		</dependency>


		<!-- THYMELEAF -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity3</artifactId>
			<version>${thymeleaf-extras-springsecurity3}</version>
		</dependency>


		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- Database connection pool -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Logging with SLF4J & LogBack -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.29</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.181</version>
		</dependency>

		<!-- Spring Data JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
		</dependency>

		<!-- Query DSL -->
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-core</artifactId>
			<version>${querydsl.version}</version>
		</dependency>

		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<version>${querydsl.version}</version>
		</dependency>

		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<version>${querydsl.version}</version>
		</dependency>


		<!-- HIBERNATE -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm-attrs</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>${hibernate-jpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>${ehcache.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Webjars (static dependencies distributed as JAR files) -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${webjars-bootstrap.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${webjars-jquery.version}</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>sockjs-client</artifactId>
			<version>${webjars-sockjs-client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>stomp-websocket</artifactId>
			<version>${webjars-stomp-websocket.version}</version>
		</dependency>

		<!-- Test Artifacts -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-framework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>

		<!-- used by Spring MVC Test framework -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>3.2.0.GA</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<version>7.0.55</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.4.2</version>
		</dependency>



		<!-- Jetty -->

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
		</dependency>


		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- To run javax.websocket in embedded server -->
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
			<version>9.2.2.v20140723</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-client-impl</artifactId>
			<version>9.2.2.v20140723</version>
		</dependency>

	</dependencies>

	<!-- all Maven plugin versions are mentioned in order to guarantee the build 
		reproducibility in the long term -->
	<build>
		<defaultGoal>install</defaultGoal>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.sql</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<compilerArguments>
						<Xlint />
					</compilerArguments>
					<verbose>true</verbose>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWarnings>true</showWarnings>
					<encoding>${project.build.sourceEncoding}</encoding>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warName>ordery</warName>
					<encoding>${project.build.sourceEncoding}</encoding>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<sourceIncludes>
						<sourceInclude>**/*.*</sourceInclude>
					</sourceIncludes>
					<additionalBuildcommands>
						<buildCommand>
							<name>org.springframework.ide.eclipse.core.springbuilder</name>
						</buildCommand>
						<buildCommand>
							<name>org.eclipse.m2e.core.maven2Builder</name>
						</buildCommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
					</additionalProjectnatures>
					<encoding>${project.build.sourceEncoding}</encoding>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>tomcat-development-server</server>
					<port>8080</port>
					<path>/</path>
					<!-- see possible values http://tomcat.apache.org/tomcat-7.0-doc/config/http.html 
						protocol -->
					<protocol>org.apache.coyote.http11.Http11NioProtocol</protocol>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.2.v20140723</version>
			</plugin>

			<!-- Query DSL Plugin -->

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Git Commit Plugin -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.1.10</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- that's the default value, you don't have to set it -->
					<prefix>git</prefix>

					<!-- that's the default value -->
					<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>

					<!-- false is default here, it prints some more information during the 
						build -->
					<verbose>false</verbose>

					<!-- @since 2.1.10 -->
					<!-- false is default here, if set to true it uses native `git` excutable 
						for extracting all data. This usualy has better performance than the default 
						(jgit) implemenation, but requires you to have git available as executable 
						for the build as well as *might break unexpectedly* when you upgrade your 
						system-wide git installation. As rule of thumb - stay on `jgit` (keep this 
						`false`) until you notice performance problems. -->
					<useNativeGit>false</useNativeGit>

					<!-- If you'd like to tell the plugin where your .git directory is, 
						use this setting, otherwise we'll perform a search trying to figure out the 
						right directory. It's better to add it explicite IMHO. -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>

					<!-- ALTERNATE SETUP - GENERATE FILE -->
					<!-- If you want to keep git information, even in your WAR file etc, 
						use this mode, which will generate a properties file (with filled out values) 
						which you can then normally read using new Properties().load(/**/) -->

					<!-- this is true by default; You may want to set this to false, if 
						the plugin should run inside a <packaging>pom</packaging> project. Most projects 
						won't need to override this property. For an use-case for this kind of behaviour 
						see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21 -->
					<skipPoms>true</skipPoms>

					<!-- this is false by default, forces the plugin to generate the git.properties 
						file -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>

					<!-- The path for the to be generated properties file, it's relative 
						to ${project.basedir} -->
					<generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>

					<!-- true by default, controls whether the plugin will fail when no 
						.git directory is found, when set to false the plugin will just skip execution -->
					<!-- @since 2.0.4 -->
					<failOnNoGitDirectory>false</failOnNoGitDirectory>

					<!-- @since v2.0.4 -->
					<!-- Controls the length of the abbreviated git commit it (git.commit.id.abbrev) 
						Defaults to `7`. `0` carries the special meaning. Maximum value is `40`, 
						because of max SHA-1 length. -->
					<abbrevLength>7</abbrevLength>

					<!-- @since 2.1.8 -->
					<!-- skip the plugin execution completely. This is useful for e.g. profile 
						activated plugin invocations or to use properties to enable / disable pom 
						features. Default value is 'false'. -->
					<skip>false</skip>

					<!-- @since 2.1.9 -->
					<!-- Can be used to exclude certain properties from being emited into 
						the resulting file. May be useful when you want to hide {@code git.remote.origin.url} 
						(maybe because it contains your repo password?), or the email of the committer 
						etc. Each value may be globbing, that is, you can write {@code git.commit.user.*} 
						to exclude both, the {@code name}, as well as {@code email} properties from 
						being emitted into the resulting files. Please note that the strings here 
						are Java regexes ({@code .*} is globbing, not plain {@code *}). -->
					<excludeProperties>
						<!-- <excludeProperty>git.user.*</excludeProperty> -->
					</excludeProperties>


					<!-- @since 2.1.0 -->
					<!-- read up about git-describe on the in man, or it's homepage - it's 
						a really powerful versioning helper and the recommended way to use git-commit-id-plugin. 
						The configuration bellow is optional, by default describe will run "just 
						like git-describe on the command line", even though it's a JGit reimplementation. -->
					<gitDescribe>

						<!-- don't generate the describe property -->
						<skip>false</skip>

						<!-- if no tag was found "near" this commit, just print the commit's 
							id instead, helpful when you always expect this field to be not-empty -->
						<always>false</always>
						<!-- how many chars should be displayed as the commit object id? 7 
							is git's default, 0 has a special meaning (see end of this README.md), and 
							40 is the maximum value here -->
						<abbrev>7</abbrev>

						<!-- when the build is triggered while the repo is in "dirty state", 
							append this suffix -->
						<dirty>-dirty</dirty>

						<!-- always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" 
							format, even if "on" a tag. The distance will always be 0 if you're "on" 
							the tag. -->
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>

			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>


		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.4,)</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>sources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>





	</build>


	<profiles>

		<profile>
			<id>build-dist</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>make-assembly-dist</id>
								<phase>package</phase>
								<goals>
									<goal>attached</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${basedir}/src/assembly/sources.xml</descriptor>
									</descriptors>
									<appendAssemblyId>true</appendAssemblyId>
									<finalName>${project.groupId}-${project.artifactId}-${project.version}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>http://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>


	<pluginRepositories>
		<pluginRepository>
			<id>sonatype-snapshots</id>
			<name>Sonatype Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</pluginRepository>
	</pluginRepositories>
</project>

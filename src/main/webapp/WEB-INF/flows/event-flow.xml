<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
      	http://www.springframework.org/schema/webflow
      	http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	start-state="eventName">

	<on-start>
		<evaluate expression="new de.hs.furtwangen.bam.jee.configurator.model.Event()"
			result="flowScope.event" />
	</on-start>

	<!-- ID Bezeichnet den Zustand innerhalb des Flows -->
	<!-- View Attribut definiert die View die dem Benutzer angezeigt werden 
		soll. Bsp intro liefert dem Benutzer intro.html zurÃ¼ck -->
	<view-state id="eventName" view="eventName" model="event">
		<transition on="proceed" to="location">
		</transition>
	</view-state>


	<view-state id="location" view="location" model="flowScope.location">
		<on-entry>
			<set name="flowScope.location"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Location()" />
		</on-entry>

		<transition on="back" to="eventName">
		</transition>
		<transition on="proceed" to="catering">
			<evaluate expression="event.setLocation(flowScope.location)" />
			<evaluate expression="flowScope.location.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="catering" view="catering" model="flowScope.catering">
		<on-entry>
			<set name="flowScope.catering"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Catering()" />
		</on-entry>
		<transition on="back" to="location" />
		<transition on="proceed" to="security">
			<evaluate expression="event.setCatering(flowScope.catering)" />
			<evaluate expression="flowScope.catering.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="security" view="security" model="flowScope.security">
		<on-entry>
			<set name="flowScope.security"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Security()" />
		</on-entry>
		<transition on="back" to="location" />
		<transition on="proceed" to="light">
			<evaluate expression="event.setSecurity(flowScope.security)" />
			<evaluate expression="flowScope.security.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="light" view="light" model="flowScope.light">
		<on-entry>
			<set name="flowScope.light"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Light()" />
		</on-entry>
		<transition on="back" to="security" />
		<transition on="proceed" to="audio">
			<evaluate expression="event.setLight(flowScope.light)" />
			<evaluate expression="flowScope.light.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="audio" view="audio" model="flowScope.audio">
		<on-entry>
			<set name="flowScope.audio"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Audio()" />
		</on-entry>
		<transition on="back" to="light" />
		<transition on="proceed" to="rigging">
			<evaluate expression="event.setAudio(flowScope.audio)" />
			<evaluate expression="flowScope.audio.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="rigging" view="rigging" model="flowScope.rigging">
		<on-entry>
			<set name="flowScope.rigging"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Rigging()" />
		</on-entry>
		<transition on="back" to="audio" />
		<transition on="proceed" to="specialty">
			<evaluate expression="event.setRigging(flowScope.rigging)" />
			<evaluate expression="flowScope.rigging.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="specialty" view="specialty" model="flowScope.specialty">
		<on-entry>
			<set name="flowScope.specialty"
				value="new de.hs.furtwangen.bam.jee.configurator.model.Specialty()" />
		</on-entry>
		<transition on="back" to="rigging" />
		<transition on="proceed" to="summary">
			<evaluate expression="event.setSpecialty(flowScope.specialty)" />
			<evaluate expression="flowScope.specialty.setEvent(event)" />
		</transition>
	</view-state>


	<view-state id="summary" view="summary">

		<transition on="back" to="specialty" />
		<transition on="proceed" to="checkout" />
		<transition on="register" to="registerflow" />
		

	</view-state>

	<view-state id="checkout" view="checkout" model="currentUser">
		<secured attributes="ROLE_CUSTOMER" />

		<on-entry>
			<evaluate expression="eventService.save(event,currentUser.name)"></evaluate>
		</on-entry>

	</view-state>
	
	<view-state id="registerflow" view="registerflow" model="flowScope.user">
		<on-entry>
			<set name="flowScope.user"
				value="new de.hs.furtwangen.bam.jee.configurator.model.User()" />
		</on-entry>
	
		<transition on="proceed" to="checkout"> 
			<evaluate expression="userService.saveCustomer(flowScope.user)" />
		</transition>
		<transition on="back" to="summary" />

	</view-state>

</flow>
